{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport default function useFetchAll(urls) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const promises = urls.map(url => fetch(process.env.REACT_APP_API_BASE_URL + url).then(response => {\n      if (response.ok) return response.json();\n      throw response;\n    }));\n    Promise.all(promises).then(json => setData(json)).catch(e => {\n      console.error(e);\n      setError(e);\n    }).finally(() => setLoading(false)); // eslint-disable-next-line\n  }, []);\n  return {\n    data,\n    loading,\n    error\n  };\n}","map":{"version":3,"sources":["/home/haroon/Desktop/React/LearningReact/online-store/src/services/useFetchAll.js"],"names":["useState","useEffect","useFetchAll","urls","data","setData","loading","setLoading","error","setError","promises","map","url","fetch","process","env","REACT_APP_API_BASE_URL","then","response","ok","json","Promise","all","catch","e","console","finally"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAGP,IAAI,CAACQ,GAAL,CAAUC,GAAD,IACxBC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAqCJ,GAAtC,CAAL,CAAgDK,IAAhD,CAAsDC,QAAD,IAAc;AACjE,UAAIA,QAAQ,CAACC,EAAb,EAAiB,OAAOD,QAAQ,CAACE,IAAT,EAAP;AACjB,YAAMF,QAAN;AACD,KAHD,CADe,CAAjB;AAOAG,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EACGO,IADH,CACSG,IAAD,IAAUf,OAAO,CAACe,IAAD,CADzB,EAEGG,KAFH,CAEUC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACjB,KAAR,CAAcgB,CAAd;AACAf,MAAAA,QAAQ,CAACe,CAAD,CAAR;AACD,KALH,EAMGE,OANH,CAMW,MAAMnB,UAAU,CAAC,KAAD,CAN3B,EARc,CAed;AACD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SAAO;AAAEH,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACD","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useFetchAll(urls) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const promises = urls.map((url) =>\n      fetch(process.env.REACT_APP_API_BASE_URL + url).then((response) => {\n        if (response.ok) return response.json();\n        throw response;\n      })\n    );\n\n    Promise.all(promises)\n      .then((json) => setData(json))\n      .catch((e) => {\n        console.error(e);\n        setError(e);\n      })\n      .finally(() => setLoading(false));\n    // eslint-disable-next-line\n  }, []);\n\n  return { data, loading, error };\n}"]},"metadata":{},"sourceType":"module"}